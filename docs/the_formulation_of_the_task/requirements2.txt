Итак вот требования к этой программе:
1. Программа должна работать в цикле, т.е. как сервер
2. Программа должна загружать настройки из файла manager.json(по аналогии с тем, как мы реализовали это в Диспетчере). Базовые настройки:
 - параметры подключения к БД
 - уровень логирования
 - максимальное количество одновременно выполняемых задач вычисления выражений
 - максимальная длительность задачи вычисления выражения
 - максимальное количество потоков-вычислителей на одну задачу вычисления
 - дополнительная задержка отдельного потока-вычислителя
3. Программа должна уметь работать независимо от БД, уметь восстанавливать подключение к БД, если оно будет потеряно.
4. Программа должна логировать свои действия(уровень логирования должен браться из настроек)
5. Основная задача программы - взять из БД необработанные задачи(где атрибут is_finished=false). Количество задач, извлекаемых из БД должно быть не более значения настройки максимального числа одновременно выполняемых задач. 
Далее, из задачи д.б. извлечено выражение(атрибут expression), которое в отдельной функции д.б. разложено на массив(или другую подобную структуру) элементарных алгебраических выражений(или подвыражений), которые можно вычислить параллельно, а затем соединить в общий результат.
Затем, программа должна передать элементарные выражения в соответствующие горутины(потоки-вычислители), выполняющиеся параллельно. В каждом потоке-вычислителе помимо вычисления переданного выражения, должна быть выполнена временная задержка.
После того, как все потоки-вычислители вернут свои результаты, должен быть сформирован общий результат и записан в БД.
6. Программа должна иметь HTTP интерфейс(например в виде хендлеров, как в Диспетчере) и реализовывать следующие функции:
- возврат списка задач(обработанных, не обработанных, обрабатываемых в нас.время)
- отмена вычисления выражения определенных задач(по выбранной задаче должны быть завершены все потоки-вычислители)
- приостановить выполнение задачи()